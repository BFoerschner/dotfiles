#!/bin/bash
# ~/.local/bin/tmux-session-manager
# Script to handle F-key session creation/attachment

SESSION_NUM=$1
DEFAULT_SESSION_NAME="session-$SESSION_NUM"

# Function to get session name for this F-key from tmux options
get_session_for_key() {
  local session_name
  session_name=$(tmux show-options -gv "@session-$SESSION_NUM" 2>/dev/null)

  if [ -n "$session_name" ] && tmux has-session -t "$session_name" 2>/dev/null; then
    echo "$session_name"
    return 0
  elif tmux has-session -t "$DEFAULT_SESSION_NAME" 2>/dev/null; then
    echo "$DEFAULT_SESSION_NAME"
    return 0
  fi

  return 1
}

# Function to save session mapping in tmux options
save_session_mapping() {
  local key=$1
  local session_name=$2
  tmux set-option -g "@session-$key" "$session_name"
}

# Check if we're inside tmux
if [ -n "$TMUX" ]; then
  # We're inside tmux
  existing_session=$(get_session_for_key)
  if [ $? -eq 0 ]; then
    # Session exists, switch to it
    tmux switch-client -t "$existing_session"
  else
    # Session doesn't exist, use tmux command-prompt for input
    tmux command-prompt -p "Enter name for session $SESSION_NUM (default: $DEFAULT_SESSION_NAME):" \
      "run-shell '$HOME/.local/bin/tmux-session-creator $SESSION_NUM \"%1\"'"
  fi
else
  # We're outside tmux
  existing_session=$(get_session_for_key)
  if [ $? -eq 0 ]; then
    # Session exists, attach to it
    tmux attach-session -t "$existing_session"
  else
    # Session doesn't exist, prompt for name
    read -p "Enter name for session $SESSION_NUM (default: $DEFAULT_SESSION_NAME): " custom_name
    session_name=${custom_name:-$DEFAULT_SESSION_NAME}

    # Save the mapping in tmux options
    save_session_mapping "$SESSION_NUM" "$session_name"

    # Create and attach to new session
    tmux new-session -s "$session_name"
  fi
fi
