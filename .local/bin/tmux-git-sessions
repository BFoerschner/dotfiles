#!/bin/bash
# ~/.local/bin/tmux-git-sessions
# Script to scan a directory and create tmux sessions for git projects

TARGET_DIR=${1:-$PWD}
DETACHED=${2:-false}

# Check if target directory exists
if [ ! -d "$TARGET_DIR" ]; then
    echo "Error: Directory '$TARGET_DIR' does not exist"
    exit 1
fi

echo "Scanning '$TARGET_DIR' for git projects..."

# Function to check if directory is a git repository
is_git_repo() {
    local dir="$1"
    [ -d "$dir/.git" ]
}

# Function to check if session already exists
session_exists() {
    local session_name="$1"
    tmux has-session -t "$session_name" 2>/dev/null
}

# Function to create session
create_session() {
    local session_name="$1"
    local project_dir="$2"
    
    if session_exists "$session_name"; then
        echo "  Session '$session_name' already exists, skipping..."
        return 0
    fi
    
    echo "  Creating session '$session_name' for '$project_dir'"
    
    if [ "$DETACHED" = "true" ]; then
        tmux new-session -d -s "$session_name" -c "$project_dir"
    else
        tmux new-session -d -s "$session_name" -c "$project_dir"
    fi
}

# Counter for found projects
project_count=0

# Scan directory for git projects
for dir in "$TARGET_DIR"/*; do
    if [ -d "$dir" ]; then
        basename_dir=$(basename "$dir")
        
        # Check if it's a git repository (but not a submodule or nested git repo)
        if is_git_repo "$dir"; then
            # Additional check: make sure this isn't a submodule by checking parent
            parent_dir=$(dirname "$dir")
            if ! is_git_repo "$parent_dir"; then
                create_session "$basename_dir" "$dir"
                ((project_count++))
            else
                echo "  Skipping '$basename_dir' (appears to be a submodule or nested repo)"
            fi
        fi
    fi
done

if [ $project_count -eq 0 ]; then
    echo "No git projects found in '$TARGET_DIR'"
else
    echo ""
    echo "Created $project_count tmux sessions for git projects"
    echo ""
    echo "Available sessions:"
    tmux list-sessions 2>/dev/null | grep -E "^[^:]+:" | cut -d: -f1 | sort
    echo ""
    echo "Use 'tmux attach -t <session_name>' to attach to a specific session"
    echo "Use 'tmux list-sessions' to see all sessions"
fi