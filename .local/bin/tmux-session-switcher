#!/usr/bin/env bash
# Script to show fzf session picker

# Function to scan directories for git projects
scan_git_projects() {
  local directories=("$@")
  
  for dir in "${directories[@]}"; do
    if [ -d "$dir" ]; then
      "$HOME/.local/bin/tmux-git-sessions" "$dir" true >/dev/null 2>&1
    fi
  done
}

# Auto-populate sessions from git repositories
if [ -n "$TMUX_AUTO_POPULATE_SESSIONS" ] && [ -n "$TMUX_GIT_PROJECTS_DIRS" ]; then
  # Split the directories by colon and scan each one
  IFS=':' read -ra DIRS <<< "$TMUX_GIT_PROJECTS_DIRS"
  scan_git_projects "${DIRS[@]}"
fi

get_sessions() {
  # List all current sessions
  tmux list-sessions -F "#{session_name}" 2>/dev/null | tac
}

sessions=$(get_sessions)

# Check if there are any sessions
if [ -z "$sessions" ]; then
  echo "No tmux sessions found"
  exit 1
fi

# Get current session name
current_session=$(tmux display-message -p "#{session_name}" 2>/dev/null)

# Use fzf to select a session
selected_session=$(
  echo "$sessions" | fzf \
    --reverse \
    --border \
    --header="Select tmux session | Enter to select | Ctrl-D to delete | Ctrl-C to create | Ctrl-R to reload projects" \
    --header-first \
    --prompt="Session> " \
    --preview="$HOME/.local/bin/tmux-preview {}" \
    --preview-window=right \
    --bind="ctrl-d:execute(bash -c 'tmux kill-session -t {}')+reload:bash -c \"tmux list-sessions -F '#{session_name}' 2>/dev/null | tac || echo ''\"" \
    --bind="ctrl-c:execute(bash -c 'read -p \"Enter session name: \" name && if tmux has-session -t \"=\$name\" 2>/dev/null; then echo \"Warning: Session '\$name' already exists!\"; read -p \"Press Enter to continue...\"; else tmux new-session -d -s \"\$name\"; fi; clear')+reload:bash -c \"tmux list-sessions -F '#{session_name}' 2>/dev/null | tac || echo ''\"" \
    --bind="ctrl-r:execute-silent(bash -c 'if [ -n \"\$TMUX_GIT_PROJECTS_DIRS\" ]; then IFS=\":\" read -ra DIRS <<< \"\$TMUX_GIT_PROJECTS_DIRS\"; for dir in \"\${DIRS[@]}\"; do [ -d \"\$dir\" ] && \$HOME/.local/bin/tmux-git-sessions \"\$dir\" true >/dev/null 2>&1; done; fi')+reload:bash -c \"tmux list-sessions -F '#{session_name}' 2>/dev/null | tac || echo ''\""
)

# If a session was selected, switch to it
if [ -n "$selected_session" ]; then
  if [ "$selected_session" != "$current_session" ]; then
    tmux switch-client -t "$selected_session"
  fi
fi
